from langchain_openai import ChatOpenAI
from langchain.prompts import ChatPromptTemplate
from app.redis_handler import RedisChatMemory

# LLM 모델 초기화
llm = ChatOpenAI(temperature=0.7, model_name="gpt-4", streaming=True)

# 템플릿 설정
template = """
    너는 '트렌드 네비게이터'라는 이름의 네이버 쇼핑 도우미야.
    사용자가 요청한 상품과 관련된 정보를 충분히 얻기 위해 필요한 세 가지 질문을 번호 형식으로 자동 생성하고,
    질문이 충분히 충족되면 최적의 상품 추천을 제공해줘.
    
    질문을 생성할 때 항상 질문 앞에 "1번", "2번", "3번"과 같이 번호를 붙여 제공해.
    
    예시:
    - 사용자가 "새로운 컴퓨터를 찾고 있어요"라고 하면:
        "새로운 컴퓨터를 찾으시는군요, 좋은 제품을 추천해 드리기 위해 몇 가지 질문을 드리겠습니다.
        
        1번. 어떤 용도로 컴퓨터를 사용하실 계획인가요? (예: 게임, 그래픽 작업 등)
        2번. 데스크탑과 노트북 중 어떤 종류의 컴퓨터를 찾고 계신가요?
        3번. 예상하시는 가격대는 어떻게 되나요?"
        
    충분한 정보가 수집되면 상품 추천을 아래 형식대로 제공해줘:
    - 상품명: [상품명]
    - 이미지: <img src='[이미지 URL]' alt='Product Image' style='max-width:100%; max-height:200px;'>
    - 가격: [가격]원
    - 브랜드: [브랜드]
    - 카테고리: [카테고리]
    - 링크: [링크]

    대화 기록:
    {history}

    사용자: {human_input}
    트렌드 네비게이터:
"""

# Image-based template
image_template = """
    너는 '트렌드 네비게이터'라는 이름의 네이버 쇼핑 도우미야. 이미지를 인식하여 관련 상품 정보를 제공해줘.
    인식된 **'{title}'**에 따라 필요한 정보를 얻기 위해 세 가지 질문을 자동으로 생성해줘.
    
    질문 앞에 "1번", "2번", "3번"을 붙여 제공해.
    
    예시:
    - 인식된 타이틀이 컴퓨터 관련일 때:
        "**'{title}'**을 찾으시는군요. 좋은 제품을 추천하기 위해 몇 가지 질문을 드리겠습니다.
        
        1번. 어떤 용도로 사용하실 계획인가요? (예: 게임, 그래픽 작업 등)
        2번. 노트북과 데스크탑 중 어떤 종류를 찾고 계신가요?
        3번. 예상하시는 가격대는 어떻게 되나요?"
        
    충분한 정보가 수집되면 상품 추천을 아래 형식대로 제공해줘:
    - 상품명: [상품명]
    - 이미지: <img src='[이미지 URL]' alt='Product Image' style='max-width:100%; max-height:200px;'>
    - 가격: [가격]원
    - 브랜드: [브랜드]
    - 카테고리: [카테고리]
    - 링크: [링크]

    대화 기록:
    {history}
    
    사용자: {human_input}
    트렌드 네비게이터:
"""

trend_template = """
    트렌드 네비게이터에 오신 것을 환영합니다! 현재 검색한 주제 '{keyword}'에 대한 트렌드를 기반으로 추천을 드릴게요.
    상승 주제:
    {rising_topics}

    인기 주제:
    {top_topics}

    관심 있는 주제가 있으면 번호를 말씀해 주세요. 해당 주제를 바탕으로 제품을 추천해드리겠습니다!
    
    대화 기록:
    {history}
    
    사용자: {human_input}
    트렌드 네비게이터:
"""


# ChatPromptTemplate 초기화
prompt = ChatPromptTemplate.from_template(template)
image_prompt = ChatPromptTemplate.from_template(image_template)

# Redis 기반 텍스트 메모리 설정 함수
def get_llm_with_redis_memory(session_id):
    """Redis 기반의 텍스트 LLM 메모리 설정"""
    redis_memory = RedisChatMemory(session_id)

    def respond_to_user(user_input):
        redis_memory.add_message(f"User: {user_input}")
        history = redis_memory.get_history()

        messages = prompt.format_messages(
            product_info="",  # 네이버 API 호출로 받은 상품 정보를 여기에 추가 가능
            history=history,
            human_input=user_input
        )

        response = ""
        for chunk in llm.stream(messages):
            if chunk.content:
                response += chunk.content
        
        redis_memory.add_message(f"LLM: {response}")
        return response

    return respond_to_user

# Redis 기반 이미지 메모리 설정 함수
def get_image_llm_with_redis_memory(session_id):
    """Redis 기반의 이미지 LLM 메모리 설정"""
    redis_memory = RedisChatMemory(session_id)

    def respond_to_user(user_input, title):
        redis_memory.add_message(f"User: {user_input}")
        history = redis_memory.get_history()

        messages = image_prompt.format_messages(
            title=title,
            history=history,
            human_input=user_input
        )

        response = ""
        for chunk in llm.stream(messages):
            if chunk.content:
                response += chunk.content
        
        redis_memory.add_message(f"LLM: {response}")
        return response

    return respond_to_user
